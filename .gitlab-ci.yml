image: osul/centos7-ruby:2.3

services:
  - redis

before_script:
  # Configure SSH deployment key inside docker image
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerinit ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  # Setup the environment
  - gem install bundler
  - touch log/application.log
  - touch log/test.log
  - bundle install --jobs $(nproc) --path=/cache/bundler
  - cp config/handle_server.yml.sample config/handle_server.yml
  - cp config/local_env.yml.sample config/local_env.yml
  - if [ ! -d /cache/hsj-8.1.1/ ]; then git clone git@code.osu.edu:osul-ads/hsj-8.1.1.git /cache/hsj-8.1.1; fi
  - mkdir ~/.handle
  - echo "140.254.87.133 10.0.0.168" > ~/.handle/local_addresses
  - echo "$REDIS_TEST_CONFIG" > config/redis.yml
  - cat config/redis.yml

  # remove the instance directories every time we test
  - rm -rf /cache/solr-test/*
  - rm -rf /cache/fcrepo4-test-data/*

  # Gitlab needs them to exist before the runner can use them.
  - mkdir -p /cache/solr-test
  - mkdir -p /cache/fcrepo4-test-data

  # Set up environment
  - bundle exec rake db:create RAILS_ENV=test
  - RAILS_ENV=test bundle exec rake db:reset

rspec:
  script:
    - xvfb-run -a bundle exec rake spec_ci
